Description: Support compiling Audacity against system portAudio.
Author: Benjamin Drung <bdrung@debian.org>

--- a/configure.in
+++ b/configure.in
@@ -305,7 +305,7 @@
 dnl-------------------------------------------------------------
 dnl LIBRARIES="LIBVORBIS LIBMAD LIBSNDFILE LIBFLAC LIBID3TAG LIBSAMPLERATE LIBRESAMPLE LIBSBSMS LIBSOUNDTOUCH LIBNYQUIST LIBVAMP LIBEXPAT LIBTWOLAME FFMPEG LIBLRDF SLV2 REDLAND PORTSMF TAGLIB"
 dnl disable plugin categorisation and LV2 libs for 1.3.7 release
-LIBRARIES="LIBVORBIS LIBMAD LIBSNDFILE LIBFLAC LIBID3TAG LIBSAMPLERATE LIBRESAMPLE LIBSBSMS LIBSOUNDTOUCH LIBNYQUIST LIBVAMP LIBEXPAT LIBTWOLAME FFMPEG PORTSMF"
+LIBRARIES="LIBVORBIS LIBMAD LIBSNDFILE LIBFLAC LIBID3TAG LIBSAMPLERATE LIBRESAMPLE LIBSBSMS LIBSOUNDTOUCH LIBNYQUIST LIBVAMP LIBEXPAT LIBTWOLAME FFMPEG PORTSMF PORTAUDIO"
 
 AC_MSG_NOTICE([Determining what libraries are available in this tree and on the system])
 
@@ -328,6 +328,7 @@
 dnl AUDACITY_CHECKLIB_LIBLRDF
 AUDACITY_CHECKLIB_PORTSMF
 dnl AUDACITY_CHECKLIB_TAGLIB
+AUDACITY_CHECKLIB_PORTAUDIO
 
 dnl Decide what libraries to build with, and whether to use system or local libraries
 dnl Set variables based on choices.
@@ -397,6 +398,14 @@
    fi
 fi
 
+if test "$PORTAUDIO_USE_LOCAL" = "yes"; then
+   ac_configure_args="$ac_configure_args $PORTAUDIO_LOCAL_CONFIGURE_ARGS"
+elif test "$PORTAUDIO_USE_SYSTEM" = "yes"; then
+   ac_configure_args="$ac_configure_args $PORTAUDIO_SYSTEM_CONFIGURE_ARGS"
+else
+   AC_MSG_ERROR([Audacity requires portaudio to be enabled])
+fi
+
 dnl we can only have one sample rate conversion library used.
 dnl by now we will have both enabled if they are present, regardless of whether
 dnl they were requested, unless one was specifically disabled.
@@ -558,13 +567,6 @@
    ;;
 esac
 
-dnl PortAudio configuration
-
-LOCAL_LIBS="$LOCAL_LIBS portaudio-v19/lib/libportaudio.a"
-EXTRAOBJS="$EXTRAOBJS ../lib-src/portaudio-v19/lib/libportaudio.a"
-CXXFLAGS="-I\$(top_srcdir)/lib-src/portaudio-v19/include $CXXFLAGS"
-
-AC_CONFIG_SUBDIRS([lib-src/portaudio-v19])
 
 case "${host_os}" in
    darwin* | rhapsody*)
@@ -602,7 +604,6 @@
    LOCAL_LIBS="$LOCAL_LIBS portmixer/libportmixer.a"
 
    AC_CONFIG_SUBDIRS([lib-src/portmixer])
-   ac_configure_args="$ac_configure_args --with-pa-include=../portaudio-v19/include"
 fi
 
 dnl Check for lrint/lrintf
@@ -667,13 +668,6 @@
 
 AC_OUTPUT
 
-dnl
-dnl Substitute any addition libraries that portaudio (v19) requires
-dnl
-pa_libs=
-pa_libs=`grep 'Libs:' lib-src/portaudio-v19/portaudio-2.0.pc | sed -e 's/Libs://;s/-L${libdir}//;s/-lportaudio//'`
-sed -i -e "s/@PA_LIBS@/$pa_libs/" src/Makefile
-
 echo ""
 echo "Finished configure:"
 
--- /dev/null
+++ b/m4/audacity_checklib_portaudio.m4
@@ -0,0 +1,56 @@
+dnl Please increment the serial number below whenever you alter this macro
+dnl for the benefit of automatic macro update systems
+# audacity_checklib_portaudio.m4 serial 1
+
+AC_DEFUN([AUDACITY_CHECKLIB_PORTAUDIO], [
+   AC_ARG_WITH(portaudio,
+               [AS_HELP_STRING([--with-portaudio], [use portaudio19])],
+               PORTAUDIO_ARGUMENT=$withval,
+               PORTAUDIO_ARGUMENT="unspecified")
+
+   dnl see if portaudio is installed on the system
+
+   PKG_CHECK_MODULES(PORTAUDIO, portaudio-2.0 >= 19,
+                     portaudio_available_system="yes",
+                     portaudio_available_system="no")
+
+   if test "x$portaudio_available_system" = "xyes" ; then
+      AC_EGREP_HEADER([Pa_GetStreamHostApiType], [portaudio.h],
+                      [have_portaudio_support=yes], [have_portaudio_support=no])
+
+      if test "x$have_portaudio_support" = "xyes" ; then
+         PORTAUDIO_SYSTEM_AVAILABLE="yes"
+         PORTAUDIO_SYSTEM_LIBS=$PORTAUDIO_LIBS
+         PORTAUDIO_SYSTEM_CXXFLAGS=$PORTAUDIO_CFLAGS
+         AC_MSG_NOTICE([portaudio19 library is available as system library])
+      else
+         PORTAUDIO_SYSTEM_AVAILABLE="no"
+         AC_MSG_NOTICE([portaudio19 library is available as system library, but does not have the Pa_GetStreamHostApiType function.])
+      fi
+   else
+      PORTAUDIO_SYSTEM_AVAILABLE="no"
+      AC_MSG_NOTICE([portaudio19 library is NOT available as system library])
+   fi
+
+   dnl see if portaudio is available locally
+
+   AC_CHECK_FILE(${srcdir}/lib-src/portaudio-v19/include/portaudio.h,
+                 portaudio_h_found="yes",
+                 portaudio_h_found="no")
+
+   if test "x$portaudio_h_found" = "xyes" ; then
+      PORTAUDIO_LOCAL_AVAILABLE="yes"
+      PORTAUDIO_LOCAL_LIBS="portaudio-v19/lib/libportaudio.a"
+      PORTAUDIO_LOCAL_CXXFLAGS='-I$(top_srcdir)/lib-src/portaudio-v19/include'
+
+      dnl set up configuring portaudio
+      PORTAUDIO_LOCAL_CONFIG_SUBDIRS="lib-src/portaudio-v19"
+      PORTAUDIO_LOCAL_CONFIGURE_ARGS="--with-pa-include=../portaudio-v19/include"
+
+      AC_MSG_NOTICE([portaudio19 library is available in the local tree])
+   else
+      PORTAUDIO_LOCAL_AVAILABLE="no"
+      AC_MSG_NOTICE([portaudio19 library is NOT available in the local tree])
+   fi
+
+])
--- a/src/Makefile.in
+++ b/src/Makefile.in
@@ -20,7 +20,7 @@
 LOCAL_LIBS = @LOCAL_LIBS@
 EXTRAOBJS = @EXTRAOBJS@
 EXTRATARGETS = @EXTRATARGETS@
-LIBS = @LIBS@ @PA_LIBS@
+LIBS = @LIBS@
 DIRS=blockfile commands effects effects/ladspa effects/nyquist effects/vamp export import prefs toolbars widgets xml
 
 srcdir=@srcdir@
